[
["index.html", "Auto Formation R avancé Chapitre 1 Introduction", " Auto Formation R avancé Le groupe State Of The R in Roscoff 2017-08-30 Chapitre 1 Introduction Le groupe State Of The R (SOTR) s’est réuni à Roscoff du 28 août 2017 au 1\\(^{\\mbox{er}}\\) septembre 2017 pour une semaine d’auto-formation autour du logiciel R. Différents sujets ont été abordés durant cette semaine - Manipulation de données :tidy, - Automatisation et reproductibilité du code : Markdown, - Programmation orientée objets : R6 class, - Aspects techniques : Production de packages, Rcpp. Ce livre résume les expériences des participants durant l’atelier. "],
["RMarkdown.html", "Chapitre 2 RMarkdown 2.1 RMarkdown pour quoi faire ? 2.2 Comment ça marche 2.3 Un document RMarkdown à la loupe", " Chapitre 2 RMarkdown 2.1 RMarkdown pour quoi faire ? 2.1.1 Automatisation de la production de document scientifique Dans un contexte de science reproductible, produire Présentation, article, notes de cours, livre, … Code Données sous la forme de documents PDF, HTML, MS Word etc … Site web : http://rmarkdown.rstudio.com 2.2 Comment ça marche 2.2.1 Un exemple de fichier .Rmd : ce document Exemple d’un document RMarkdown 2.2.2 Schéma conceptuel Processus de production de documents 2.2.3 Markdown Un langage à balises très simple (version simplifiée de html par exemple) 2.2.3.1 Exemple ## Heading ### Sub-heading #### Another deeper heading Paragraphs are separated by a blank line. 2.2.4 Markdown Cheatsheet Tout le détail (rapide !) Détails sur Markdown 2.2.5 Pandoc C’est un convertisseur de format de documents. Il sait prendre un document d’un format x pour le passer en Markdown étendu prendre un document Markdown étendu pour le passer en un format y De fait il peut passer d’un format x à un format y https://pandoc.org/MANUAL.pdf 2.2.6 RMarkdown C’est un document pandoc avec des balises spécifiques R. http://rmarkdown.rstudio.com/lesson-1.html 2.2.7 De RMarkdown à un document finalisé avec knitr Le bouton knit effectue les opérations suivantes : Extraire la partie Markdown texte Executer le code R pour produire les sorties demandées Intégrer les sorties précédentes dans un document html, word ou pdf 2.3 Un document RMarkdown à la loupe 2.3.1 Entete du document : YAML Un exemple d’entête de fichier RMarkdown 2.3.2 Options globales pour le code R Les options du code R du document peuvent être spécifiées par défaut 2.3.3 Code Chunk ```{r} 2+2 ``` ## [1] 4 ou python, ou sql, bash …. 2.3.4 R Code Chunk, quelques options utiles ```{r, fig.show=&#39;hide&#39;, warning=TRUE, message=FALSE} data(cars) m &lt;- mean(cars$speed) plot(speed~dist) ``` La vitesse moyenne est `` r m ``. "],
["blogdown-pour-creer-un-site.html", "Chapitre 3 Blogdown pour créer un site 3.1 Principes de blogdown 3.2 Étapes", " Chapitre 3 Blogdown pour créer un site 3.1 Principes de blogdown blogdown permet de gérer un site web à partir de pages statiques en markdown ou Rmarkdown. Le package R utilise le générateur de site Hugo. Les fichiers du site sont écrits dans le répertoire content et copiés pour devenir visible dans le répertoire public en passant par le répertoire static. 3.2 Étapes 3.2.1 Préliminaires 3.2.1.1 Remarque MacOSX Commencer par installer homebrew https://brew.sh 3.2.1.2 Outils de base Installer une version supérieure à 1.1.350 Installer le package blogdown et Hugo install.packages(&#39;blogdown&#39;) library(&#39;blogdown&#39;) install_hugo() 3.2.2 Créer le projet par RStudio New project &gt; New Directory &gt; Website using blogdown Ne pas décocher “install hugo automatically” 3.2.3 Créer le post _index.md Le post doit être dans le répertoire principal (dégager “post”). Ce post sera la page d’accueil qui deviendra index.html dans le répertoire public 3.2.4 Visualisation du site web pour visualiser le site web, nous avons utilisé la commande Server Site du menu Addins proposé par `blogdown 3.2.5 Créer des pages additionnelles créer un post dans le répertoire principal le nom du fichier ne doit pas comporter de majuscule choisir l’extension Les hyperliens classiques markdown entre fichiers fonctionnent 3.2.5.1 Exemple Création d’un lien vers le fichier blogdown-pour-creer-un-site.Rmarkdown [Notre expérience blogdown](blogdown-pour-creer-un-site) 3.2.6 Gestion des images 3.2.6.1 Inclusion d’une images à la taille voulue les images sont stockées dans un sous répertoire du répertoire static. Dans l’exemple qui suit le répertoire des images est /static/images-markdown/ pour éviter les messages d’erreurs liés à l’édition du markdown, nous avons ajouté un champ resource-filesdans le YAML 3.2.6.2 Exemple --- title: Introduction à Rmarkdown author: &#39;&#39; date: &#39;2017-08-29&#39; resource_files: - ../static/ slug: introduction-a-rmarkdown categories: [] tags: [] --- Les images sont alors incluses comme suit: ```{r, out.width=&quot;50px&quot;, echo=TRUE, fig.show=&#39;hide&#39;} knitr::include_graphics(&quot;/images-markdown/ExempleMdFile.png&quot;, auto_pdf = TRUE, dpi = NA) ``` 3.2.7 Reste à faire publication en ligne changement de thème ou personnalisation du thème par défaut "],
["final-words.html", "Chapitre 4 Final Words", " Chapitre 4 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
